import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Header from '../components/Header'
import Author from '../components/Author'
import Advert from '../components/Advert' 
import Footer from '../components/Footer'
import ReactCanvasNest from '../components/ReactCanvasNest'
 
import { Row, Col, List, Breadcrumb } from 'antd'
import React, { useState, useEffect } from 'react';
import { CalendarOutlined, FolderOutlined, FireOutlined } from '@ant-design/icons'

import axios from 'axios'
import servicePath from '../config/apiUrl'
import Link from 'next/link'

import marked from 'marked' //解析markdown代码
import hljs from 'highlight.js' //让代码高亮
import 'highlight.js/styles/monokai-sublime.css'

export default function MyList(list) {

  const renderer = new marked.Renderer()
    marked.setOptions({
      renderer: renderer,
      gfm: true,
      pedantic: false, //容错处理
      sanitize: false, //
      tables: true,
      breaks: false,
      smartLists: true,
      // highlight: function(code) {
      //   return hljs.highlightAuto(code).value
      // }
      highlight: function(code, lang) {
        const language = hljs.getLanguage(lang) ? lang : 'plaintext';
        return hljs.highlight(code, { language }).value;
      }
    })

  const [mylist,setMylist] = useState(list.data)
  const id = list.id
  useEffect(() => {
    setMylist(list.data)
  })

  return (
    <div className={styles.container}>
      <ReactCanvasNest className="canvasNest"/>
      <Head>
        <title>zhangxianhong | 列表页</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      {/* 头部区 */}
      <Header/>
      
      {/* 列表区 */}
      <Row className='comm-main' type='flex' justify='center'>
          {/* 左侧 */}
          <Col className='comm-left' xs={24} sm={24} md={16} lg={18} xl={14}>
            <div className="bread-div">
              <Breadcrumb>
                <Breadcrumb.Item>
                  <a href="/">首页</a>
                </Breadcrumb.Item>
                <Breadcrumb.Item>
                  {mylist[0].typeName}
                </Breadcrumb.Item>
              </Breadcrumb>
            </div>
            <List header={<div className="latestlog">最新日志</div>} 
            itemLayout='vertical'
            dataSource={mylist}
            renderItem={item=>{
              return (
                <List.Item>  
                  <div className="list-title">
                    <Link href={{pathname:'/detailed',query:{id:item.id}}}>
                      <a>{item.title}</a>
                    </Link>
                  </div>
                  <div className="list-icon">
                    <span><CalendarOutlined />{item.addTime} </span>
                    <span><FolderOutlined />{item.typeName} </span>
                    <span><FireOutlined />{item.view_count}</span>
                  </div>
                  <div className="list-context" dangerouslySetInnerHTML={{__html:marked(item.introduce)}}>
                    {/* {item.introduce} */}
                    </div>
                </List.Item>
              )
            }}
            />
          </Col>
          
          {/* 右侧 */}
          <Col className='comm-right' xs={0} sm={0} md={7} lg={5} xl={4}>
            <Author/>
            <Advert/>
          </Col>
      </Row>

      {/* 底部Footer区 */}
      <Footer/>
    </div>
  )
}

// 获取数据库中的数据
MyList.getInitialProps = async (context) => {
  const id = context.query.id
  console.log('id是？？？',id)
  const promise = new Promise((resolve,reject) => {
    axios.get(servicePath.getListById+id).then(res => {     
      console.log(res.data.data)
      const result = {'data': res.data.data,'id':id}
      // resolve(res.data)
      resolve(result)
    }).catch(err => {
      reject(err)
    })
  })
  return await promise
}